name: build

on:
  push:
    tags: ['v*', 'test*']

jobs:
  build_macos:
    name: Build for MacOS
    runs-on: macos-13
    steps:
    - name: "Checkout"
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: "Setup Go"
      uses: actions/setup-go@v2
      with:
        go-version: '^1.17'
    - name: Cache Go Modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: "Build"
      run: make build_macos
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: macos
        path: _output/macos/narr.app

  build_windows:
    name: Build for Windows
    runs-on: windows-2022
    steps:
    - name: "Checkout"
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: "Setup Go"
      uses: actions/setup-go@v2
      with:
        go-version: '^1.17'
    - name: Cache Go Modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: "Build"
      run: make build_windows
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: windows
        path: _output/windows/narr.exe

  build_linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: "Setup Go"
      uses: actions/setup-go@v2
      with:
        go-version: '^1.17'
    - name: Cache Go Modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: "Build"
      run: make build_linux
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: linux
        path: _output/linux/narr

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    if: ${{ !contains(github.ref, 'test') }}
    needs: [build_macos, build_windows, build_linux]
    steps:
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
    - name: Download Artifacts
      uses: actions/download-artifact@v4.1.7
      with:
        path: .
    - name: Preparation
      run: |
        ls -R
        chmod u+x macos/Contents/MacOS/narr
        chmod u+x linux/narr

        mv macos narr.app     && zip -r narr-macos.zip narr.app
        mv windows/narr.exe . && zip narr-windows.zip narr.exe
        mv linux/narr .       && zip narr-linux.zip narr
    - name: Upload MacOS
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./narr-macos.zip
          asset_name: narr-${{ github.ref }}-macos64.zip
          asset_content_type: application/zip
    - name: Upload Windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./narr-windows.zip
          asset_name: narr-${{ github.ref }}-windows64.zip
          asset_content_type: application/zip
    - name: Upload Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./narr-linux.zip
          asset_name: narr-${{ github.ref }}-linux64.zip
          asset_content_type: application/zip
